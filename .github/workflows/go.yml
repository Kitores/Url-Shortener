# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go Deploy App

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:

  build:
    runs-on: ubuntu-latest
    env:
      Host: root@185.10.184.125
      DEPLOY_DIRECTORY: /root/apps/url-shortener
      CONFIG_PATH: /root/apps/url-shortener/config/prod.yaml
      ENV_FILE_PATH: /root/apps/url-shortener/config.env

      
    steps:
    - name: Checout repository
      uses: actions/checkout@v4
    - name: Set up Go
      uses: actions/setup-go@v4
      with:    
        go-version: '1.22.1'
    - name: Setup PostgreSQL
      uses: tj-actions/install-postgresql@v3
      with:
        postgresql-version: 16
        
    - name: Start PostgreSQL service
      run: sudo systemctl start postgresql
      
    - name: Run SQL scripts
      env:
        PGPASSWORD: ${{ secrets.POSTGRES_PASSWORD }}  
      run: |
        sudo -u postgres psql -c "CREATE DATABASE app;"
        sudo -u postgres psql app < db/schema.sql        
    - name: Test PostgreSQL connection
      env:
        PGPASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
      run: |  
        sudo -u postgres psql -c "\l"
        sudo -u postgres psql app -c "SELECT * FROM app;"
    - name: Build app
      run: |
        go mod download
        go build -o url-shortener ./cmd/url-shortener
    - name: Deploy to VM
      run: |
        sudo apt-get install -y ssh rsync
        echo "$DEPLOY_SSH_KEY" > deploy_key.pem
        chmod 600 deploy_key.pem
        ssh -i deploy_key.pem -o StrictHostKeyChecking=no ${{ env.HOST }} "mkdir -p ${{ env.DEPLOY_DIRECTORY }}"
        rsync -avz -e 'ssh -i deploy_key.pem -o StrictHostKeyChecking=no' --exclude='.git' ./ ${{ env.HOST }}:${{ env.DEPLOY_DIRECTORY }}
      env:
        DEPLOY_SSH_KEY: ${{ secrets.DEPLOY_SSH_KEY }}
    - name: Remove old systemd service file
      run: |
        ssh -i deploy_key.pem -o StrictHostKeyChecking=no ${{ env.HOST }} "rm -f /etc/systemd/system/url-shortener.service"
    - name: List workspace contents
      run: |
        echo "Listing deployment folder contents:"
        ls -la ${{ github.workspace }}/deployment
    - name: Create environment file on server
      run: |
        ssh -i deploy_key.pem -o StrictHostKeyChecking=no ${{ env.HOST }} "touch ${{ env.ENV_FILE_PATH }}"
        ssh -i deploy_key.pem -o StrictHostKeyChecking=no ${{ env.HOST }} "chmod 600 ${{ env.ENV_FILE_PATH }}"
        ssh -i deploy_key.pem -o StrictHostKeyChecking=no ${{ env.HOST }} "echo 'CONFIG_PATH=${{ env.CONFIG_PATH }}' > ${{ env.ENV_FILE_PATH }}"
        ssh -i deploy_key.pem -o StrictHostKeyChecking=no ${{ env.HOST }} "echo 'HTTP_SERVER_PASSWORD=${{ secrets.AUTH_PASS }}' >> ${{ env.ENV_FILE_PATH }}"
    - name: Copy systemd service file
      run: |
        scp -i deploy_key.pem -o StrictHostKeyChecking=no ${{ github.workspace }}/deployment/url-shortener.service ${{ env.HOST }}:/tmp/url-shortener.service
        ssh -i deploy_key.pem -o StrictHostKeyChecking=no ${{ env.HOST }} "mv /tmp/url-shortener.service /etc/systemd/system/url-shortener.service"
    - name: Start application
      run: |
        ssh -i deploy_key.pem -o StrictHostKeyChecking=no ${{ env.HOST }} "systemctl daemon-reload && systemctl restart url-shortener.service"
